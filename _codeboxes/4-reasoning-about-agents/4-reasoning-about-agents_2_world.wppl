var world = restaurantChoiceMDP;
var feature = world.feature;

var observedLocs = restaurantNameToPath.donutSouth;
var startState = {loc: [3,1],
		          timeLeft: 15,
				  terminateAfterAction: false};

var utilityTablePrior = function(){
  var baseUtilityTable = {
    'Donut S': 1,
    'Donut N': 1,
    Veg: 1,
    Noodle: 1,
    timeCost: -0.05
  };
  return uniformDraw( 
    [{table: update(baseUtilityTable, {'Donut N':2, 'Donut S':2}),
      favourite: 'donut'},
     {table: update(baseUtilityTable, {Veg:2}),
      favourite: 'veg'},
     {table: update(baseUtilityTable, {Noodle:2}),
      favourite: 'noodle'}]
  );
};

var posterior = Enumerate( function(){
  var utilityTableAndFavourite = utilityTablePrior();
  var utilityTable = utilityTableAndFavourite.table;
  var favourite = utilityTableAndFavourite.favourite;
  
  var utility = mdpTableToUtilityFunction(utilityTable, feature);
  var params = {utility: utility,
		        alpha: 100};
  var agent  = makeMDPAgent(params, world);
  
  var predictedStates = simulateMDP(startState, world, agent, 'states');
  var predictedLocs = _.map(predictedStates, 'loc');
  condition(_.isEqual(observedLocs, predictedLocs));
  return {favourite: favourite};
});

viz.vegaPrint(posterior);
