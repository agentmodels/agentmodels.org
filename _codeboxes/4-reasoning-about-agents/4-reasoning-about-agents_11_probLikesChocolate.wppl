var probLikesChocolate = function(timeLeft){
  var armToPrize = {0: 'chocolate',
		            1: 'champagne'};
  var worldAndStart = makeIRLBanditWorldAndStart(2, armToPrize, timeLeft);
  var observe = worldAndStart.world.observe;
  var fullObserve = getFullObserve(observe);
  var transition = worldAndStart.world.transition;

  var makeTrajectory = function(state) {
    var observation = fullObserve(state);
    var action = 0; // agent always pulls arm 0
    var nextState = transition(state, action);
    return [{state: state,
	         observation: observation,
	         action: action}];
  };

  var observedSequence = makeTrajectory(worldAndStart.startState);

  var baseParams = {
    alpha: 100
  };

  var noChampagnePrior = Enumerate(function(){
    var latent = flip(0.2) ? armToPrize : update(armToPrize, {1: 'nothing'});
    return buildState(worldAndStart.startState.manifestState, latent);
  });
  var informedPrior = deltaERP(worldAndStart.startState);
  var priorInitialBelief = categoricalERP([0.5, 0.5], [noChampagnePrior,
						                               informedPrior]);

  var likesChampagne = {nothing: 0,
			            champagne: 5,
						chocolate: 3};
  var likesChocolate = {nothing: 0,
			            champagne: 3,
						chocolate: 5};

  var priorPrizeToUtility = categoricalERP([0.5, 0.5], [likesChampagne,
							                            likesChocolate]);

  var posterior = agentModelsIRLBanditInfer(baseParams, priorPrizeToUtility,
					                        priorInitialBelief, worldAndStart,
											observedSequence);

  var likesChocInformed = {prizeToUtility: likesChocolate,
			               priorBelief: informedPrior};
  var probLikesChocInformed = Math.exp(posterior.score([], likesChocInformed));
  var likesChocNoChampagne = {prizeToUtility: likesChocolate,
			                  priorBelief: noChampagnePrior};
  var probLikesChocNoChampagne = Math.exp(posterior.score([], likesChocNoChampagne));
  return probLikesChocInformed + probLikesChocNoChampagne;
};

var lifetimes = [5,6,7,8,9];
var probsLikesChoc = map(probLikesChocolate, lifetimes);

print('Probability of liking chocolate for lifetimes ' + lifetimes + '\n'
      + probsLikesChoc);

viz.bar(lifetimes, probsLikesChoc)
