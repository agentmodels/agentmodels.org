var varyArms = function(n) {
  var world = makeStochasticBanditWorld(n);

  var probablyChampagneERP = categoricalERP([0.2, 0.8], ['nothing', 'champagne']);
  var probablyNothingERP = categoricalERP([0.8, 0.2], ['nothing', 'champagne']);
  
  var makeLatentState = function(numArms) {
    return map(function(x){return probablyChampagneERP;}, _.range(numArms));
  };

  var startState = buildStochasticBanditStartState(4, makeLatentState(n));

  var latentSampler = function(numArms) {
    return map(function(x){return uniformDraw([probablyNothingERP,
                    					       probablyChampagneERP]);},
	           _.range(numArms));
  };
  var prior = Enumerate(function(){
    var latentState = latentSampler(n);
    return buildStochasticBanditStartState(4, latentState);
  });

  var prizeToUtility = {start: 0, nothing: 0, champagne: 1};

  var utility = makeStochasticBanditUtility(prizeToUtility);
  var agentParams = {utility: utility,
		             alpha: 100,
					 priorBelief: prior,
					 sophisticatedOrNaive: 'naive',
					 boundVOI: {on: true, bound: 1},
					 noDelays: false,
					 discount: 0,
					 myopia: {on: false, bound: 0},
					 fastUpdateBelief: false};
  var agent = makeBeliefDelayAgent(agentParams, world);

  var f = function() {
    var trajectory = simulateBeliefDelayAgent(startState, world, agent, 'stateAction');
    return trajectory;
  };

  return timeit(f).runtimeInMilliseconds.toPrecision(3) * 0.001;

};

var arms = [1,2,3];
var runtimes = map(varyArms, arms);

print('Runtime in sec for arms ' + arms + '\n' + runtimes);

viz.bar(arms, runtimes);
