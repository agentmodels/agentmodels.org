
// test to show the scaling properties of stochastic bandits

var varyTime = function(n) {
  var world = makeStochasticBanditWorld(2);

  var probablyChampagneERP = categoricalERP([0.2, 0.8], ['nothing', 'champagne']);
  var probablyNothingERP = categoricalERP([0.8, 0.2], ['nothing', 'champagne']);

  var trueLatent = {0: deltaERP('chocolate'),
  		            1: probablyChampagneERP};
  var falseLatent = update(trueLatent, {1: probablyNothingERP});

  var startState = buildStochasticBanditStartState(n, trueLatent);

  var prior = Enumerate(function(){
    var latent = uniformDraw([trueLatent, falseLatent]);
    return buildStochasticBanditStartState(n, latent);
  });

  var prizeToUtility = {start: 0, nothing: 0, chocolate: 1, champagne: 1.5};
  var utility = makeStochasticBanditUtility(prizeToUtility);

  var agentParams = {utility: utility,
	                 alpha: 100,
		             priorBelief: prior,
		             fastUpdateBelief: false};
  var agent = makeBeliefAgent(agentParams, world);

  var f = function() {
    return simulateBeliefAgent(startState, world, agent, 'stateAction');
  };

  return timeit(f).runtimeInMilliseconds.toPrecision(3) * 0.001;
};

// Varying the lifetime of the agent
var lifetimes = _.range(16).slice(2);
var runtimes = map(varyTime, lifetimes);

print('Runtime in sec for lifetimes ' + lifetimes + '\n' + runtimes);

viz.line(lifetimes, runtimes);

// note: this takes approximately 30 seconds to run
